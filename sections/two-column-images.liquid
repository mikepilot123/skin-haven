<style>
  .two-column-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: stretch;    /* make both columns the same height */
    height: calc(100vh - var(--header-height, 100px) - var(--announcement-bar-height, 40px)); /* fill remaining space after header and announcement bar */
    min-height: 600px;      /* ensure minimum height */
    opacity: 1;             /* temporarily disabled animation */
    transform: translateY(0); /* temporarily disabled animation */
    /* transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1); */
    position: relative;
    overflow: hidden;
  }
  .two-column-wrapper.animated {
    opacity: 1;
    transform: translateY(0);
  }

  /* Webflow-style scroll animations - TEMPORARILY DISABLED */
  .left-column .overlay-content,
  .right-column img {
    opacity: 1;
    transform: translateY(0);
    /* transition: all 1.2s cubic-bezier(0.16, 1, 0.3, 1);
    transition-delay: 0.3s; */
  }

  .two-column-wrapper.animated .left-column .overlay-content {
    opacity: 1;
    transform: translateY(0);
    /* transition-delay: 0.6s; */
  }

  .two-column-wrapper.animated .right-column img {
    opacity: 1;
    transform: translateY(0) scale(1);
    /* transition-delay: 0.4s; */
  }

  .right-column img {
    transform: translateY(0) scale(1);
    /* transition: all 1.2s cubic-bezier(0.16, 1, 0.3, 1); */
  }

  /* Parallax effect on scroll */
  .parallax-element {
    transform: translateY(0);
    transition: transform 0.1s ease-out;
  }

  .left-column,
  .right-column {
    /* these rules now apply to both columns */
    position: relative;
    overflow: hidden;        /* clip anything that overflows */
    display: flex;
    align-items: center;
    justify-content: center;
    background-size: cover;  /* this only does anything on .left-column */
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;
    min-height: 0;          /* allow flex items to shrink below content size */
  }

  .right-column img {
    width: 100%;
    height: 100%;
    object-fit: cover;       /* crop or scale to fill the box while maintaining aspect ratio */
    display: block;          /* removes default image spacing */
  }

  .overlay-content {
    text-align: center;
    max-width: 400px;
  }

  .btn {
    margin-top: 20px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 40px;
    padding: 0.75rem 1.5rem;
    background: transparent;
    color: #000;
    border: 2px solid #000;
    border-radius: 30px;
    font-size: 14px;
    font-family: 'Nunito Sans', Arial, sans-serif;
    font-weight: 700;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    outline: none;
    position: relative;
    overflow: hidden;
    gap: 8px;
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: left 0.6s;
    z-index: 1;
  }

  .btn:hover::before {
    left: 100%;
  }

  .btn span {
    position: relative;
    z-index: 2;
  }

  .btn:hover {
    background: #000;
    color: #fff;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
  }

  @media(max-width: 768px) {
    .two-column-wrapper {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr;
      height: calc(100vh - var(--header-height, 100px) - var(--announcement-bar-height, 40px)); /* fill remaining space after header and announcement bar */
      min-height: 400px;
    }
    .left-column {
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      padding: 2rem 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      order: 1;
    }
    .right-column {
      order: 2;
    }
    .overlay-content {
      padding: 2rem 1.5rem;
      max-width: 100%;
    }
    .overlay-content h1 {
      margin-bottom: 1.5rem;
      line-height: 1.2;
    }
    .overlay-content h2 {
      margin-bottom: 1.5rem;
      line-height: 1.4;
    }
    .overlay-content .btn {
      margin-top: 2rem;
      padding: 1rem 2.5rem;
      min-width: 44px;
      min-height: 44px;
      border-radius: 8px;
      transition: all 0.2s ease;
    }
    .overlay-content .btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    .overlay-content > *:not(:last-child) {
      margin-bottom: 1.5rem;
    }
  }
</style>
<div class="two-column-wrapper">
  <div class="left-column" style="background-image: url({{ section.settings.left_bg_image | image_url: width: 600 }});">
    <div class="overlay-content">
      <h1>{{ section.settings.heading }}</h1>
      <h2>{{ section.settings.subheading }}</h2>
      {% if section.settings.button_link != blank %}
        <a href="{{ section.settings.button_link }}" class="btn">{{ section.settings.button_text }}</a>
      {% endif %}
    </div>
  </div>
  <div class="right-column">
    {% if section.settings.right_image %}
      {{ section.settings.right_image | image_url: width: 1500 | image_tag }}
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var section = document.querySelector('.two-column-wrapper');
    if (!section) return;
    
    // Enhanced intersection observer for reveal animation
    var observer = new window.IntersectionObserver(function(entries) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          section.classList.add('animated');
          observer.disconnect();
        }
      });
    }, { threshold: 0.2 });
    observer.observe(section);

    // Webflow-style parallax scroll effect
    let ticking = false;
    
    function updateParallax() {
      var scrolled = window.pageYOffset;
      var sectionRect = section.getBoundingClientRect();
      var sectionTop = sectionRect.top + scrolled;
      var sectionHeight = sectionRect.height;
      var windowHeight = window.innerHeight;
      
      // Only apply parallax when section is in viewport
      if (sectionRect.bottom >= 0 && sectionRect.top <= windowHeight) {
        // Calculate parallax offset (slower movement for background elements)
        var parallaxOffset = (scrolled - sectionTop + windowHeight) * 0.1;
        
        // Apply subtle parallax to background image
        var leftColumn = section.querySelector('.left-column');
        if (leftColumn) {
          leftColumn.style.transform = 'translateY(' + (-parallaxOffset * 0.3) + 'px)';
        }
        
        // Apply counter-parallax to content for depth
        var overlayContent = section.querySelector('.overlay-content');
        if (overlayContent) {
          overlayContent.style.transform = 'translateY(' + (parallaxOffset * 0.1) + 'px)';
        }
        
        // Apply gentle parallax to right image
        var rightImage = section.querySelector('.right-column img');
        if (rightImage) {
          rightImage.style.transform = 'translateY(' + (-parallaxOffset * 0.2) + 'px) scale(' + (1 + parallaxOffset * 0.0001) + ')';
        }
      }
      
      ticking = false;
    }
    
    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(updateParallax);
        ticking = true;
      }
    }
    
    // Throttled scroll listener for performance
    window.addEventListener('scroll', requestTick, { passive: true });
    
    // Clean up on page unload
    window.addEventListener('beforeunload', function() {
      window.removeEventListener('scroll', requestTick);
    });
  });
</script>

{% schema %}
{
  "name": "Two Img Column Row",
  "settings": [
    {
      "type": "image_picker",
      "id": "left_bg_image",
      "label": "Left Background Image"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Your Heading"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Your subheading text."
    },
    {
      "type": "image_picker",
      "id": "right_image",
      "label": "Right Side Image"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Shop Now"
    }
  ],
  "presets": [
    {
      "name": "Two Column with Background Image"
    }
  ]
}
{% endschema %}
